version: "3"
services:


  # app:
  #   image: nginx:1.18
  #   # networks:
  #   #   - www_magento_network
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
  #     - ./docker/nginx/sites-available/:/etc/nginx/sites-available
  #     - ./:/var/www/html

  #   links:
  #     - elasticsearch:es
  # phpfpm:
  #   image: whatdapep/php-fpm:8.1-magento2
  #   volumes:
  #     - ./src:/var/www/html
  #     - ./docker/phpfpm/local.ini:/usr/local/etc/php/conf.d/local.ini
  #   # networks:
  #   #   - www_magento_network
  #   links:
  #     - elasticsearch:es
  db:
    container_name: magento_mysql
    build: ./docker/mysql/.
    volumes:
      - ./docker/mysql/data:/var/lib/mysql/
      - ./docker/mysql/initdb/:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_DATABASE=magento_db
      - MYSQL_USER=magento_db
      - MYSQL_PASSWORD=pomming1997
      - MYSQL_ROOT_PASSWORD=pomming1997
      - MYSQL_ROOT_HOST='%'
    command: mysqld --innodb-buffer-pool-size=256M
    ports:
      - "3306:3306"
    networks:
      - www_magento_network
  elasticsearch:
    container_name: es_magento
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.4
    environment:
      - node.name=es_magento
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=127.0.0.1,[::1]
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.port=9200
      - network.host=0.0.0.0
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./docker/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - www_magento_network
  phpmyadmin:
    container_name: magento_phpmyadmin
    restart: always
    image: phpmyadmin/phpmyadmin:latest
    environment:
      - MYSQL_ROOT_PASSWORD=pomming1997
      - MYSQL_USER=magento_db
      - MYSQL_PASSWORD=pomming1997
    ports:
      - "8080:80"
    links:
      - db:database
    depends_on:
      - db
    networks:
      - www_magento_network
#Docker Networks
networks:
  default:
    name: www_magento_network
    external: true
  www_magento_network:
    name: www_magento_network
